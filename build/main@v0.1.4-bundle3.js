
/*************************** [bundle] ****************************/
// Original file:./examples/webgl-two-function.html
/*****************************************************************/
window.__etcpack__bundleSrc__['38']=function(){
    var __etcpack__scope_bundle__={};
    var __etcpack__scope_args__;
    __etcpack__scope_bundle__.default= "<!DOCTYPE html>\r\n<html lang=\"zh-cn\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <script src=\"https://unpkg.com/image3d@3\"></script>\r\n    <style>\r\n        body {\r\n            margin: 0;\r\n            text-align: center;\r\n            overflow: hidden;\r\n        }\r\n    </style>\r\n\r\n    <!-- 顶点着色器 -->\r\n    <script type='x-shader/x-vertex' id='vs'>\r\n        attribute vec4 a_position;\r\n        uniform mat4 u_matrix;\r\n        attribute vec4 a_color;\r\n        varying vec4 v_color;\r\n        void main(){\r\n            gl_Position=u_matrix * a_position;\r\n            v_color=a_color;\r\n        }\r\n    </script>\r\n\r\n    <!-- 片段着色器 -->\r\n    <script type='x-shader/x-fragment' id='fs'>\r\n        precision mediump float;\r\n        varying vec4 v_color;\r\n        void main(){\r\n            gl_FragColor=v_color;\r\n        }\r\n    </script>\r\n\r\n</head>\r\n\r\n<body>\r\n\r\n    <canvas width='300' height='300'>非常抱歉，您的浏览器不支持canvas!</canvas>\r\n\r\n    <script>\r\n\r\n        // 创建3D对象并配置好画布和着色器\r\n        var image3d = new image3D(document.getElementsByTagName('canvas')[0], {\r\n            \"vertex-shader\": document.getElementById(\"vs\").innerText,\r\n            \"fragment-shader\": document.getElementById(\"fs\").innerText,\r\n            depth: true\r\n        });\r\n\r\n        /**\r\n         * 许多的点，三个点拼接成一个三角形，\r\n         * 每个点由6个数据组成，前3个表示点的位置，后3个表示点的颜色\r\n         * 而一个个三角形拼接成最终的图形\r\n        */\r\n        var points = [];\r\n\r\n        // 一个根据值来确定颜色的方法\r\n        var valToColor = function (val) {\r\n            return [val * 0.5, 0.5, 1 - val * 0.5];\r\n        }\r\n\r\n        var dist = 0.02;\r\n        var color, val;\r\n        // y=x2+z2;\r\n        for (var x = -1; x < 1; x += dist) {\r\n            for (var z = -1; z <= 1; z += dist) {\r\n\r\n                // 左上三角形\r\n\r\n                val = x * x + z * z;\r\n                color = valToColor(val);\r\n                points.push(x, val, z, color[0], color[1], color[2]);\r\n\r\n                val = (x + dist) * (x + dist) + z * z;\r\n                points.push(x + dist, val, z, color[0], color[1], color[2]);\r\n\r\n                val = x * x + (z + dist) * (z + dist);\r\n                points.push(x, val, z + dist, color[0], color[1], color[2]);\r\n\r\n                // 右下三角形\r\n\r\n                val = (x + dist) * (x + dist) + z * z;\r\n                color = valToColor(val);\r\n                points.push(x + dist, val, z, color[0], color[1], color[2]);\r\n\r\n                val = x * x + (z + dist) * (z + dist);\r\n                points.push(x, val, z + dist, color[0], color[1], color[2]);\r\n\r\n                val = (x + dist) * (x + dist) + (z + dist) * (z + dist);\r\n                points.push(x + dist, val, z + dist, color[0], color[1], color[2]);\r\n\r\n            }\r\n        }\r\n\r\n        // 点的个数\r\n        var num = points.length / 6;\r\n\r\n        // 点的坐标\r\n        image3d.Buffer().write(new Float32Array(points)).use('a_position', 3, 6, 0).use('a_color', 3, 6, 3);\r\n\r\n        var painter = image3d.Painter();\r\n\r\n        //  创建相机对象\r\n        var camera = image3d.Camera({\r\n            size: 2\r\n        }).rotateBody(0.9, 0, 1, 0).rotateBody(0.3, 1, 0, 0, 0, 0, 1).moveBody(0.5, 0, -1, 0);\r\n\r\n        setInterval(function () {\r\n\r\n            camera.rotateBody(0.05, 0, 1, 0);\r\n\r\n            // 传递照相机\r\n            image3d.setUniformMatrix(\"u_matrix\",\r\n                camera.value()\r\n            );\r\n\r\n            // 绘制\r\n            painter.drawTriangle(0, num);\r\n\r\n        }, 30);\r\n\r\n    </script>\r\n\r\n</body>\r\n\r\n</html>"
  
    return __etcpack__scope_bundle__;
}
